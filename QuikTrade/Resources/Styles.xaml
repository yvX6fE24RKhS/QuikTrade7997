<!-- <version>1.0.7900.* : 1.0.7898.*</version> -->
<ResourceDictionary  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:osc="clr-namespace:OpenSourceControls;assembly=DockPanelSplitter"
                     xmlns:commands="clr-namespace:QuikTrade.ViewModels.Commands;assembly=QuikTrade"
                     xmlns:converters="clr-namespace:QuikTrade.Utilities.Converters"
>
   <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
   <converters:TabItemConverter x:Key="TabItemConverter" />

   <!-- Styling the Border -->
   <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
      <Setter Property="Background" Value="WhiteSmoke" />
      <Setter Property="BorderBrush" Value="LightGray" />
      <Setter Property="BorderThickness" Value="2" />
      <Setter Property="CornerRadius" Value="0" />
      <Setter Property="SnapsToDevicePixels" Value="True" />
   </Style>

   <!-- Styling the DockPanelSplitter -->
   <Style x:Key="HorizontalBevelGripStyle" TargetType="{x:Type osc:DockPanelSplitter}">
      <!--<Setter Property="ProportionalResize" Value="False" />-->
      <Setter Property="Thickness" Value="6"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type osc:DockPanelSplitter}">
               <Grid ToolTip="Resize" SnapsToDevicePixels="True" Background="LightGray">
                  <!-- Grip -->
                  <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                     <Rectangle Width="2" Height="2" Fill="#5A000000"/>
                     <Rectangle Width="2" Height="2" Margin="2 0 2 0" Fill="#5A000000"/>
                     <Rectangle Width="2" Height="2" Fill="#5A000000"/>
                     <!-- (could also use an image or a drawing) -->
                  </StackPanel>
                  <!-- Bevels -->
                  <Border BorderBrush="#5AFFFFFF" BorderThickness="0,1,0,0"/>
                  <Border BorderBrush="#5A000000" BorderThickness="0,0,0,1"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="VerticalBevelGripStyle" TargetType="{x:Type osc:DockPanelSplitter}">
      <Setter Property="Thickness" Value="6"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type osc:DockPanelSplitter}">
               <Grid ToolTip="Resize" SnapsToDevicePixels="True" Background="LightGray">
                  <!-- Grip -->
                  <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                     <Rectangle Width="2" Height="2" Fill="#5A000000"/>
                     <Rectangle Width="2" Height="2" Margin="0 2 0 2" Fill="#5A000000"/>
                     <Rectangle Width="2" Height="2" Fill="#5A000000"/>
                     <!-- (could also use an image or a drawing) -->
                  </StackPanel>
                  <!-- Bevels -->
                  <Border BorderBrush="#5AFFFFFF" BorderThickness="1,0,0,0"/>
                  <Border BorderBrush="#5A000000" BorderThickness="0,0,1,0"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!-- Styling the TabItemCloseButton -->
   <Style x:Key="CloseButtonStyle" TargetType="Button">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Button">
               <Grid>
                  <Path Name="Cross" Stroke="Gray" StrokeThickness="2" Stretch="Fill" Data="M 0 0 M 0.3 0.3 L 0.7 0.7 M 0.3 0.7 L 0.7 0.3 M 1 1"/>
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="Cross" Property="Stroke" Value="Red"/>
                  </Trigger>
                  <Trigger Property="IsPressed" Value="True">
                     <Setter TargetName="Cross" Property="Stroke" Value="White"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!--Styling the TabControl-->
   <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}" BasedOn="{StaticResource {x:Type TabControl}}">
      <Setter Property="SelectedItem" Value="{Binding SelectedTab}" />
   </Style>
   
   <!-- Styling the TabItem -->
   <Style TargetType="{x:Type TabItem}">
      <Setter Property="IsSelected" Value="{Binding IsSelected}" />
      <Setter Property="Tag" Value="{Binding RelativeSource={RelativeSource Self}}"/>
      <Setter Property="Uid" Value="{Binding Uid}" />
      <Setter Property="Content" Value="{Binding Content}" />
      <Setter Property="ContextMenu">
         <Setter.Value>
            <ContextMenu>
               <MenuItem   Header="Закрыть другие такие же вкладки"
                           Command="commands:ViewModelCommands.CloseOtherSameTabsCommand"
                           IsEnabled="{Binding 
                              RelativeSource={RelativeSource 
                                 Mode=FindAncestor, 
                                 AncestorType={x:Type ContextMenu}
                              },
                              Path=PlacementTarget.Tag.IsSelected
                           }"
                           CommandTarget="{Binding 
                              RelativeSource={RelativeSource
                                 Mode=FindAncestor, 
                                 AncestorType={x:Type ContextMenu}
                              },
                              Path=PlacementTarget.Tag
                           }"
                           Visibility="{Binding 
                              RelativeSource={RelativeSource
                                 Mode=FindAncestor,  
                                 AncestorType={x:Type ContextMenu}
                              },
                              Path=PlacementTarget.Tag.IsSelected,
                              Converter={StaticResource booleanToVisibilityConverter}
                           }"
               />

               <!--<MenuItem.Visibility>
                     <MultiBinding Converter="{StaticResource BooleanAndToVisibilityConverter}">
                        <Binding  
                           RelativeSource="{RelativeSource Mode=FindAncestor,  AncestorType={x:Type ContextMenu}}"
                           Path="PlacementTarget.Tag.IsSelected" 
                        />
                        <Binding  
                           RelativeSource="{RelativeSource Mode=FindAncestor,  AncestorType={x:Type ContextMenu}}"
                           Path="PlacementTarget.Tag.IsSelected"
                           Converter="{StaticResource booleanToVisibilityConverter}" 
                        />
                     </MultiBinding>   
                  </MenuItem.Visibility>-->
               <!--Command="{x:Static commands:ViewModelCommands.CloseAllSameTabsCommand}"-->

               <MenuItem   Header="Закрыть все такие же вкладки"
                           Command="commands:ViewModelCommands.CloseAllSameTabsCommand"
                           IsEnabled="{Binding
                              RelativeSource={RelativeSource 
                                 Mode=FindAncestor,  
                                 AncestorType={x:Type ContextMenu}
                              },
                              Path=PlacementTarget.Tag.IsSelected
                           }"
                           CommandTarget="{Binding 
                              RelativeSource={RelativeSource 
                                 Mode=FindAncestor, 
                                 AncestorType={x:Type ContextMenu}
                              }, 
                              Path=PlacementTarget.Tag
                           }"
                           Visibility="{Binding 
                              RelativeSource={RelativeSource
                                 Mode=FindAncestor,  
                                 AncestorType={x:Type ContextMenu}
                              },
                              Path=PlacementTarget.Tag.IsSelected,
                              Converter={StaticResource booleanToVisibilityConverter}
                           }"
               />

               <MenuItem   Header="Закрыть другие вкладки"
                           Command="commands:ViewModelCommands.CloseOtherTabsCommand"
                           CommandTarget="{Binding 
                              RelativeSource={RelativeSource 
                                 Mode=FindAncestor, 
                                 AncestorType={x:Type ContextMenu}
                              },  
                              Path=PlacementTarget.Tag
                           }"
                />

               <MenuItem   Header="Закрыть вкладку" 
                           Command="commands:ViewModelCommands.CloseTabCommand"
                           CommandTarget="{Binding 
                              RelativeSource={RelativeSource 
                                 Mode=FindAncestor, 
                                 AncestorType={x:Type ContextMenu}
                              }, 
                              Path=PlacementTarget.Tag
                           }"
               />
            </ContextMenu>
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type TabItem}">
               <!-- this is the header template-->
               <Grid x:Name="TabItemGrid" HorizontalAlignment="Stretch" Background="#FFE5E5E5" Margin="2,0,2,0">
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="53*"/>
                     <ColumnDefinition Width="15*"/>
                     <ColumnDefinition Width="4*"/>
                  </Grid.ColumnDefinitions>

                  <ContentPresenter Content="{Binding Header}" 
                                    ToolTip="TestToolTip" 
                                    Grid.Column="0" 
                                    HorizontalAlignment="Center" 
                                    Margin="2,2,2,2"
                  />

                  <Button  Name="ButtonCloseTabItem"
                           Command="commands:ViewModelCommands.CloseTabCommand"
                           Width="18" 
                           Height="18" 
                           Grid.Column="1" 
                           Style="{StaticResource CloseButtonStyle}" 
                           HorizontalAlignment="Left"
                           Margin="0"
                           Grid.ColumnSpan="2"
                  />
                  <!--Command="{Binding '[ViewModelCommands.CloseTabCommand]'}"-->
                  <!--Command="{x:Static commands:ViewModelCommands.CloseTabCommand}"-->
               </Grid>

               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="TabItemGrid" Property="Panel.Background" Value="DarkGray"/>
                  </Trigger>

                  <Trigger Property="IsSelected" Value="True">
                     <Setter TargetName="TabItemGrid" Property="Panel.Background" Value="Black"/>
                     <Setter TargetName="TabItemGrid" Property="TextBlock.Foreground" Value="White"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
</ResourceDictionary>